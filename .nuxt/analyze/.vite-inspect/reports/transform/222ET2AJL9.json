{
  "resolvedId": "/Users/leonardohumbert/Downloads/sistema-futebol-online/nuxt/composables/auth/authRequest.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { formatCalendarAsDate, formatMaskAsNumber } from '~/utils/functions/formatData.js';\n\nexport const useAuthRequest = () => {\n    const config = useRuntimeConfig();\n    const request = useRequest();\n    const token = useCookie('token');\n\n    const login = async (data: any) => {\n        try {\n            const response: any = await $fetch('login', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorLoginRequest(e);\n            throw e;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            const response: any = await $fetch('logout', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n            });\n            token.value = null;\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const validarSessao = async () => {\n        try {\n            const response = await $fetch('validar-sessao', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            throw e;\n        }\n    };\n\n    const recuperarSenha = async (data: any) => {\n        try {\n            const response: any = await $fetch('recuperar-senha', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const validarTokenRedefinicao = async (data: any) => {\n        try {\n            const queryString = new URLSearchParams(data).toString();\n            const url = 'validar-token-redefinicao?' + queryString;\n\n            const response = await $fetch(url, {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'GET',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const redefinirSenha = async (data: any) => {\n        try {\n            const response: any = await $fetch('redefinir-senha', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const gerarSenha = () => {\n        const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n        const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const numberChars = '0123456789';\n        const specialChars = '!@#$%&?';\n        const length = 8;\n      \n        const allChars = lowercaseChars + uppercaseChars + numberChars + specialChars;\n      \n        const getRandomChar = (charset: string) => charset[Math.floor(Math.random() * charset.length)];\n        const getRandomItem = <T>(array: T[]) => array[Math.floor(Math.random() * array.length)];\n      \n        const passwordArray = [\n            getRandomChar(uppercaseChars),\n            getRandomChar(lowercaseChars),\n            getRandomChar(numberChars),\n            getRandomChar(specialChars),\n        ];\n        \n        while (passwordArray.length < length) {\n        passwordArray.push(getRandomItem(allChars.split('')));\n        }\n    \n        passwordArray.sort(() => Math.random() - 0.5);\n        return passwordArray.join('');\n    };\n\n    const cadastrarNovoUsuario = async (data: any) => {\n        try {\n            const response: any = await $fetch('cadastrar-usuario', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(formatData(data)),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            throw e;\n        }\n    };\n\n    return {\n        login,\n        logout,\n        validarSessao,\n        recuperarSenha,\n        validarTokenRedefinicao,\n        redefinirSenha,\n        gerarSenha,\n        cadastrarNovoUsuario,\n    };\n};\n\nconst formatData = (data: any) => {\n    data.cpf_cnpj = data.cpf_cnpj ? formatMaskAsNumber(data.cpf_cnpj) : null;\n    data.data_nascimento = data.data_nascimento ? formatCalendarAsDate(data.data_nascimento) : null;\n    data.data_abertura = data.data_abertura ? formatCalendarAsDate(data.data_abertura) : null;\n    return data;\n};",
      "start": 1742841400186,
      "end": 1742841400228,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1742841400228,
      "end": 1742841400228,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1742841400228,
      "end": 1742841400228,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1742841400228,
      "end": 1742841400228,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1742841400228,
      "end": 1742841400228,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { formatCalendarAsDate, formatMaskAsNumber } from \"~/utils/functions/formatData.js\";\nexport const useAuthRequest = () => {\n  const config = useRuntimeConfig();\n  const request = useRequest();\n  const token = useCookie(\"token\");\n  const login = async (data) => {\n    try {\n      const response = await $fetch(\"login\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorLoginRequest(e);\n      throw e;\n    }\n  };\n  const logout = async () => {\n    try {\n      const response = await $fetch(\"logout\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\"\n      });\n      token.value = null;\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const validarSessao = async () => {\n    try {\n      const response = await $fetch(\"validar-sessao\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      throw e;\n    }\n  };\n  const recuperarSenha = async (data) => {\n    try {\n      const response = await $fetch(\"recuperar-senha\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const validarTokenRedefinicao = async (data) => {\n    try {\n      const queryString = new URLSearchParams(data).toString();\n      const url = \"validar-token-redefinicao?\" + queryString;\n      const response = await $fetch(url, {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"GET\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const redefinirSenha = async (data) => {\n    try {\n      const response = await $fetch(\"redefinir-senha\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const gerarSenha = () => {\n    const lowercaseChars = \"abcdefghijklmnopqrstuvwxyz\";\n    const uppercaseChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const numberChars = \"0123456789\";\n    const specialChars = \"!@#$%&?\";\n    const length = 8;\n    const allChars = lowercaseChars + uppercaseChars + numberChars + specialChars;\n    const getRandomChar = (charset) => charset[Math.floor(Math.random() * charset.length)];\n    const getRandomItem = (array) => array[Math.floor(Math.random() * array.length)];\n    const passwordArray = [\n      getRandomChar(uppercaseChars),\n      getRandomChar(lowercaseChars),\n      getRandomChar(numberChars),\n      getRandomChar(specialChars)\n    ];\n    while (passwordArray.length < length) {\n      passwordArray.push(getRandomItem(allChars.split(\"\")));\n    }\n    passwordArray.sort(() => Math.random() - 0.5);\n    return passwordArray.join(\"\");\n  };\n  const cadastrarNovoUsuario = async (data) => {\n    try {\n      const response = await $fetch(\"cadastrar-usuario\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(formatData(data))\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      throw e;\n    }\n  };\n  return {\n    login,\n    logout,\n    validarSessao,\n    recuperarSenha,\n    validarTokenRedefinicao,\n    redefinirSenha,\n    gerarSenha,\n    cadastrarNovoUsuario\n  };\n};\nconst formatData = (data) => {\n  data.cpf_cnpj = data.cpf_cnpj ? formatMaskAsNumber(data.cpf_cnpj) : null;\n  data.data_nascimento = data.data_nascimento ? formatCalendarAsDate(data.data_nascimento) : null;\n  data.data_abertura = data.data_abertura ? formatCalendarAsDate(data.data_abertura) : null;\n  return data;\n};\n",
      "start": 1742841400228,
      "end": 1742841400348,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/leonardohumbert/Downloads/sistema-futebol-online/nuxt/composables/auth/authRequest.ts"
        ],
        "sourcesContent": [
          "import { formatCalendarAsDate, formatMaskAsNumber } from '~/utils/functions/formatData.js';\n\nexport const useAuthRequest = () => {\n    const config = useRuntimeConfig();\n    const request = useRequest();\n    const token = useCookie('token');\n\n    const login = async (data: any) => {\n        try {\n            const response: any = await $fetch('login', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorLoginRequest(e);\n            throw e;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            const response: any = await $fetch('logout', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n            });\n            token.value = null;\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const validarSessao = async () => {\n        try {\n            const response = await $fetch('validar-sessao', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            throw e;\n        }\n    };\n\n    const recuperarSenha = async (data: any) => {\n        try {\n            const response: any = await $fetch('recuperar-senha', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const validarTokenRedefinicao = async (data: any) => {\n        try {\n            const queryString = new URLSearchParams(data).toString();\n            const url = 'validar-token-redefinicao?' + queryString;\n\n            const response = await $fetch(url, {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'GET',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const redefinirSenha = async (data: any) => {\n        try {\n            const response: any = await $fetch('redefinir-senha', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n        }\n    };\n\n    const gerarSenha = () => {\n        const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n        const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const numberChars = '0123456789';\n        const specialChars = '!@#$%&?';\n        const length = 8;\n      \n        const allChars = lowercaseChars + uppercaseChars + numberChars + specialChars;\n      \n        const getRandomChar = (charset: string) => charset[Math.floor(Math.random() * charset.length)];\n        const getRandomItem = <T>(array: T[]) => array[Math.floor(Math.random() * array.length)];\n      \n        const passwordArray = [\n            getRandomChar(uppercaseChars),\n            getRandomChar(lowercaseChars),\n            getRandomChar(numberChars),\n            getRandomChar(specialChars),\n        ];\n        \n        while (passwordArray.length < length) {\n        passwordArray.push(getRandomItem(allChars.split('')));\n        }\n    \n        passwordArray.sort(() => Math.random() - 0.5);\n        return passwordArray.join('');\n    };\n\n    const cadastrarNovoUsuario = async (data: any) => {\n        try {\n            const response: any = await $fetch('cadastrar-usuario', {\n                baseURL: config.public.apiBase,\n                headers: { \"Content-type\": \"application/json\" },\n                method: 'POST',\n                body: JSON.stringify(formatData(data)),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            throw e;\n        }\n    };\n\n    return {\n        login,\n        logout,\n        validarSessao,\n        recuperarSenha,\n        validarTokenRedefinicao,\n        redefinirSenha,\n        gerarSenha,\n        cadastrarNovoUsuario,\n    };\n};\n\nconst formatData = (data: any) => {\n    data.cpf_cnpj = data.cpf_cnpj ? formatMaskAsNumber(data.cpf_cnpj) : null;\n    data.data_nascimento = data.data_nascimento ? formatCalendarAsDate(data.data_nascimento) : null;\n    data.data_abertura = data.data_abertura ? formatCalendarAsDate(data.data_abertura) : null;\n    return data;\n};"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1742841400348,
      "end": 1742841400348,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1742841400348,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1742841400349,
      "end": 1742841400349,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRuntimeConfig } from '#app/nuxt';\nimport { useRequest } from '/Users/leonardohumbert/Downloads/sistema-futebol-online/nuxt/composables/common/request.ts';\nimport { useCookie } from '#app/composables/cookie';\nimport { formatCalendarAsDate, formatMaskAsNumber } from \"~/utils/functions/formatData.js\";\nexport const useAuthRequest = () => {\n  const config = useRuntimeConfig();\n  const request = useRequest();\n  const token = useCookie(\"token\");\n  const login = async (data) => {\n    try {\n      const response = await $fetch(\"login\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorLoginRequest(e);\n      throw e;\n    }\n  };\n  const logout = async () => {\n    try {\n      const response = await $fetch(\"logout\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\"\n      });\n      token.value = null;\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const validarSessao = async () => {\n    try {\n      const response = await $fetch(\"validar-sessao\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      throw e;\n    }\n  };\n  const recuperarSenha = async (data) => {\n    try {\n      const response = await $fetch(\"recuperar-senha\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const validarTokenRedefinicao = async (data) => {\n    try {\n      const queryString = new URLSearchParams(data).toString();\n      const url = \"validar-token-redefinicao?\" + queryString;\n      const response = await $fetch(url, {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"GET\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const redefinirSenha = async (data) => {\n    try {\n      const response = await $fetch(\"redefinir-senha\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n    }\n  };\n  const gerarSenha = () => {\n    const lowercaseChars = \"abcdefghijklmnopqrstuvwxyz\";\n    const uppercaseChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const numberChars = \"0123456789\";\n    const specialChars = \"!@#$%&?\";\n    const length = 8;\n    const allChars = lowercaseChars + uppercaseChars + numberChars + specialChars;\n    const getRandomChar = (charset) => charset[Math.floor(Math.random() * charset.length)];\n    const getRandomItem = (array) => array[Math.floor(Math.random() * array.length)];\n    const passwordArray = [\n      getRandomChar(uppercaseChars),\n      getRandomChar(lowercaseChars),\n      getRandomChar(numberChars),\n      getRandomChar(specialChars)\n    ];\n    while (passwordArray.length < length) {\n      passwordArray.push(getRandomItem(allChars.split(\"\")));\n    }\n    passwordArray.sort(() => Math.random() - 0.5);\n    return passwordArray.join(\"\");\n  };\n  const cadastrarNovoUsuario = async (data) => {\n    try {\n      const response = await $fetch(\"cadastrar-usuario\", {\n        baseURL: config.public.apiBase,\n        headers: { \"Content-type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(formatData(data))\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      throw e;\n    }\n  };\n  return {\n    login,\n    logout,\n    validarSessao,\n    recuperarSenha,\n    validarTokenRedefinicao,\n    redefinirSenha,\n    gerarSenha,\n    cadastrarNovoUsuario\n  };\n};\nconst formatData = (data) => {\n  data.cpf_cnpj = data.cpf_cnpj ? formatMaskAsNumber(data.cpf_cnpj) : null;\n  data.data_nascimento = data.data_nascimento ? formatCalendarAsDate(data.data_nascimento) : null;\n  data.data_abertura = data.data_abertura ? formatCalendarAsDate(data.data_abertura) : null;\n  return data;\n};\n",
      "start": 1742841400349,
      "end": 1742841400351,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;A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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1742841400351,
      "end": 1742841400351,
      "order": "normal"
    }
  ]
}
