{
  "resolvedId": "/Users/leonardohumbert/Downloads/sistema-futebol-online/nuxt/composables/sistema/controle-acesso/userRequest.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { PAGE_USUARIOS } from '~/utils/constants/pages.js';\n\nexport const useUserRequest = () => {\n    const config = useRuntimeConfig();\n    const token = useCookie('token');\n    const request = useRequest();\n\n    const getAll = async (params: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users/buscar', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(params),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const get = async (id: number) => {\n        try {\n            const response = await $fetch(`controle-acesso/users/${id}`, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path);\n            return;\n        }\n    };\n\n    const post = async (data: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path + '/cadastrar');\n            return;\n        }\n    };\n    \n    const put = async (id: number, data: any) => {\n        try {\n            const response = await $fetch(`controle-acesso/users/${id}`, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'PUT',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path + '/' + id);\n            return;\n        }\n    };\n\n    const destroy = async (id: number) => {\n        try {\n            const response = await $fetch(`controle-acesso/users/${id}`, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'DELETE',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path);\n            return;\n        }\n    };\n\n    const retornarPerfilUsuario = async () => {\n        try {\n            const response = await $fetch('controle-acesso/users/perfil', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            throw e;\n        }\n    };\n\n    const getGrupos = async (id: number, params: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/grupos', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(params),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const desassociarGrupo = async (id: number, idGrupo: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/grupos/'+idGrupo, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'DELETE',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const associarGrupo = async (id: number, idGrupo: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/grupos/'+idGrupo, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getGruposDisponiveis = async (id: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/gruposDisponiveis', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getOrganizacoes = async (id: number, params: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/organizacoes', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(params),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getOrganizacoesDisponiveis = async (id: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/organizacoesDisponiveis', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getOptions = async () => {\n            try {\n                const response = await $fetch('controle-acesso/users/options', {\n                    baseURL: config.public.apiBase,\n                    headers: {\n                        \"Accept\": \"application/json\",\n                        \"Content-type\": \"application/json\",\n                        \"Authorization\": \"Bearer \" + token.value,\n                    },\n                });\n                return response;\n            } catch (e) {\n                return;\n            }\n        };\n\n    return {\n        getAll,\n        get,\n        post,\n        put,\n        destroy,\n        retornarPerfilUsuario,\n        getGrupos,\n        desassociarGrupo,\n        associarGrupo,\n        getGruposDisponiveis,\n        getOrganizacoes,\n        getOrganizacoesDisponiveis,\n        getOptions,\n    };\n};",
      "start": 1742847314721,
      "end": 1742847314740,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1742847314740,
      "end": 1742847314740,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1742847314740,
      "end": 1742847314740,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1742847314740,
      "end": 1742847314740,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1742847314740,
      "end": 1742847314740,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { PAGE_USUARIOS } from \"~/utils/constants/pages.js\";\nexport const useUserRequest = () => {\n  const config = useRuntimeConfig();\n  const token = useCookie(\"token\");\n  const request = useRequest();\n  const getAll = async (params) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/buscar\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(params)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const get = async (id) => {\n    try {\n      const response = await $fetch(`controle-acesso/users/${id}`, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path);\n      return;\n    }\n  };\n  const post = async (data) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path + \"/cadastrar\");\n      return;\n    }\n  };\n  const put = async (id, data) => {\n    try {\n      const response = await $fetch(`controle-acesso/users/${id}`, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"PUT\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path + \"/\" + id);\n      return;\n    }\n  };\n  const destroy = async (id) => {\n    try {\n      const response = await $fetch(`controle-acesso/users/${id}`, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"DELETE\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path);\n      return;\n    }\n  };\n  const retornarPerfilUsuario = async () => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/perfil\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      throw e;\n    }\n  };\n  const getGrupos = async (id, params) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/grupos\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(params)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const desassociarGrupo = async (id, idGrupo) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/grupos/\" + idGrupo, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"DELETE\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const associarGrupo = async (id, idGrupo) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/grupos/\" + idGrupo, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getGruposDisponiveis = async (id) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/gruposDisponiveis\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getOrganizacoes = async (id, params) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/organizacoes\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(params)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getOrganizacoesDisponiveis = async (id) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/organizacoesDisponiveis\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getOptions = async () => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/options\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      return;\n    }\n  };\n  return {\n    getAll,\n    get,\n    post,\n    put,\n    destroy,\n    retornarPerfilUsuario,\n    getGrupos,\n    desassociarGrupo,\n    associarGrupo,\n    getGruposDisponiveis,\n    getOrganizacoes,\n    getOrganizacoesDisponiveis,\n    getOptions\n  };\n};\n",
      "start": 1742847314740,
      "end": 1742847314953,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/leonardohumbert/Downloads/sistema-futebol-online/nuxt/composables/sistema/controle-acesso/userRequest.ts"
        ],
        "sourcesContent": [
          "import { PAGE_USUARIOS } from '~/utils/constants/pages.js';\n\nexport const useUserRequest = () => {\n    const config = useRuntimeConfig();\n    const token = useCookie('token');\n    const request = useRequest();\n\n    const getAll = async (params: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users/buscar', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(params),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const get = async (id: number) => {\n        try {\n            const response = await $fetch(`controle-acesso/users/${id}`, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path);\n            return;\n        }\n    };\n\n    const post = async (data: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path + '/cadastrar');\n            return;\n        }\n    };\n    \n    const put = async (id: number, data: any) => {\n        try {\n            const response = await $fetch(`controle-acesso/users/${id}`, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'PUT',\n                body: JSON.stringify(data),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path + '/' + id);\n            return;\n        }\n    };\n\n    const destroy = async (id: number) => {\n        try {\n            const response = await $fetch(`controle-acesso/users/${id}`, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'DELETE',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e, PAGE_USUARIOS.path);\n            return;\n        }\n    };\n\n    const retornarPerfilUsuario = async () => {\n        try {\n            const response = await $fetch('controle-acesso/users/perfil', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            throw e;\n        }\n    };\n\n    const getGrupos = async (id: number, params: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/grupos', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(params),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const desassociarGrupo = async (id: number, idGrupo: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/grupos/'+idGrupo, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'DELETE',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const associarGrupo = async (id: number, idGrupo: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/grupos/'+idGrupo, {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getGruposDisponiveis = async (id: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/gruposDisponiveis', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getOrganizacoes = async (id: number, params: any) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/organizacoes', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n                method: 'POST',\n                body: JSON.stringify(params),\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getOrganizacoesDisponiveis = async (id: number) => {\n        try {\n            const response = await $fetch('controle-acesso/users/'+id+'/organizacoesDisponiveis', {\n                baseURL: config.public.apiBase,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token.value,\n                },\n            });\n            return response;\n        } catch (e) {\n            request.errorRequest(e);\n            return;\n        }\n    };\n\n    const getOptions = async () => {\n            try {\n                const response = await $fetch('controle-acesso/users/options', {\n                    baseURL: config.public.apiBase,\n                    headers: {\n                        \"Accept\": \"application/json\",\n                        \"Content-type\": \"application/json\",\n                        \"Authorization\": \"Bearer \" + token.value,\n                    },\n                });\n                return response;\n            } catch (e) {\n                return;\n            }\n        };\n\n    return {\n        getAll,\n        get,\n        post,\n        put,\n        destroy,\n        retornarPerfilUsuario,\n        getGrupos,\n        desassociarGrupo,\n        associarGrupo,\n        getGruposDisponiveis,\n        getOrganizacoes,\n        getOrganizacoesDisponiveis,\n        getOptions,\n    };\n};"
        ],
        "mappings": "AAAA,SAAS,qBAAqB;AAEvB,aAAM,iBAAiB,MAAM;AAChC,QAAM,SAAS,iBAAiB;AAChC,QAAM,QAAQ,UAAU,OAAO;AAC/B,QAAM,UAAU,WAAW;AAE3B,QAAM,SAAS,OAAO,WAAgB;AAClC,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,gCAAgC;AAAA,QAC1D,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,MAAM;AAAA,MAC/B,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,MAAM,OAAO,OAAe;AAC9B,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,yBAAyB,EAAE,IAAI;AAAA,QACzD,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,GAAG,cAAc,IAAI;AAC1C;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,OAAO,OAAO,SAAc;AAC9B,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,yBAAyB;AAAA,QACnD,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,IAAI;AAAA,MAC7B,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,GAAG,cAAc,OAAO,YAAY;AACzD;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,MAAM,OAAO,IAAY,SAAc;AACzC,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,yBAAyB,EAAE,IAAI;AAAA,QACzD,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,IAAI;AAAA,MAC7B,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,GAAG,cAAc,OAAO,MAAM,EAAE;AACrD;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,UAAU,OAAO,OAAe;AAClC,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,yBAAyB,EAAE,IAAI;AAAA,QACzD,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,MACZ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,GAAG,cAAc,IAAI;AAC1C;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,wBAAwB,YAAY;AACtC,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,gCAAgC;AAAA,QAC1D,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB,YAAM;AAAA,IACV;AAAA,EACJ;AAEA,QAAM,YAAY,OAAO,IAAY,WAAgB;AACjD,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,2BAAyB,KAAG,WAAW;AAAA,QACjE,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,MAAM;AAAA,MAC/B,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,mBAAmB,OAAO,IAAY,YAAoB;AAC5D,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,2BAAyB,KAAG,aAAW,SAAS;AAAA,QAC1E,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,MACZ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,gBAAgB,OAAO,IAAY,YAAoB;AACzD,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,2BAAyB,KAAG,aAAW,SAAS;AAAA,QAC1E,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,MACZ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,uBAAuB,OAAO,OAAe;AAC/C,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,2BAAyB,KAAG,sBAAsB;AAAA,QAC5E,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,kBAAkB,OAAO,IAAY,WAAgB;AACvD,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,2BAAyB,KAAG,iBAAiB;AAAA,QACvE,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,QACA,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU,MAAM;AAAA,MAC/B,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,6BAA6B,OAAO,OAAe;AACrD,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,2BAAyB,KAAG,4BAA4B;AAAA,QAClF,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR,cAAQ,aAAa,CAAC;AACtB;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,aAAa,YAAY;AACvB,QAAI;AACA,YAAM,WAAW,MAAM,OAAO,iCAAiC;AAAA,QAC3D,SAAS,OAAO,OAAO;AAAA,QACvB,SAAS;AAAA,UACL,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,iBAAiB,YAAY,MAAM;AAAA,QACvC;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,GAAG;AACR;AAAA,IACJ;AAAA,EACJ;AAEJ,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1742847314953,
      "end": 1742847314953,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1742847314953,
      "end": 1742847314953,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1742847314954,
      "end": 1742847314954,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRuntimeConfig } from '#app/nuxt';\nimport { useCookie } from '#app/composables/cookie';\nimport { useRequest } from '/Users/leonardohumbert/Downloads/sistema-futebol-online/nuxt/composables/common/request.ts';\nimport { PAGE_USUARIOS } from \"~/utils/constants/pages.js\";\nexport const useUserRequest = () => {\n  const config = useRuntimeConfig();\n  const token = useCookie(\"token\");\n  const request = useRequest();\n  const getAll = async (params) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/buscar\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(params)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const get = async (id) => {\n    try {\n      const response = await $fetch(`controle-acesso/users/${id}`, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path);\n      return;\n    }\n  };\n  const post = async (data) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path + \"/cadastrar\");\n      return;\n    }\n  };\n  const put = async (id, data) => {\n    try {\n      const response = await $fetch(`controle-acesso/users/${id}`, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"PUT\",\n        body: JSON.stringify(data)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path + \"/\" + id);\n      return;\n    }\n  };\n  const destroy = async (id) => {\n    try {\n      const response = await $fetch(`controle-acesso/users/${id}`, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"DELETE\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e, PAGE_USUARIOS.path);\n      return;\n    }\n  };\n  const retornarPerfilUsuario = async () => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/perfil\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      throw e;\n    }\n  };\n  const getGrupos = async (id, params) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/grupos\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(params)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const desassociarGrupo = async (id, idGrupo) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/grupos/\" + idGrupo, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"DELETE\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const associarGrupo = async (id, idGrupo) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/grupos/\" + idGrupo, {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\"\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getGruposDisponiveis = async (id) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/gruposDisponiveis\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getOrganizacoes = async (id, params) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/organizacoes\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        },\n        method: \"POST\",\n        body: JSON.stringify(params)\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getOrganizacoesDisponiveis = async (id) => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/\" + id + \"/organizacoesDisponiveis\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      request.errorRequest(e);\n      return;\n    }\n  };\n  const getOptions = async () => {\n    try {\n      const response = await $fetch(\"controle-acesso/users/options\", {\n        baseURL: config.public.apiBase,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token.value\n        }\n      });\n      return response;\n    } catch (e) {\n      return;\n    }\n  };\n  return {\n    getAll,\n    get,\n    post,\n    put,\n    destroy,\n    retornarPerfilUsuario,\n    getGrupos,\n    desassociarGrupo,\n    associarGrupo,\n    getGruposDisponiveis,\n    getOrganizacoes,\n    getOrganizacoesDisponiveis,\n    getOptions\n  };\n};\n",
      "start": 1742847314954,
      "end": 1742847314956,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1742847314956,
      "end": 1742847314956,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1742847314956,
      "end": 1742847314956,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1742847314956,
      "end": 1742847314956,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1742847314956,
      "end": 1742847314956,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1742847314956,
      "end": 1742847314956,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1742847314956,
      "end": 1742847314957,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1742847314957,
      "end": 1742847314957,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1742847314957,
      "end": 1742847314957,
      "order": "normal"
    }
  ]
}
